{"ast":null,"code":"var _jsxFileName = \"D:\\\\training\\\\react\\\\5\\\\serv_rout_db\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; // import axios from 'axios';\n\nimport './App.css';\nimport Home from \"./Component/Home\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\"; // import {routes} from \"./router\";\n\nclass App extends Component {\n  // constructor(props) {\n  //     super(props);\n  //     this.state = {\n  //         products: [],\n  //         categories: [],\n  //         currentCategory: \"Notebook\",\n  //         cart: [],\n  //         intervalIsSet: false\n  //     };\n  // }\n  // when component mounts, first thing it does is fetch all existing data in our db\n  // then we incorporate a polling logic so that we can easily see if our db has\n  // changed and implement those changes into our UI\n  // // our put method that uses our backend api\n  // // to create new query into our data base\n  // putDataToDB = (title) => {\n  //     let currentIds = this.state.data.map((data) => data.id);\n  //     let idToBeAdded = 0;\n  //     while (currentIds.includes(idToBeAdded)) {\n  //         ++idToBeAdded;\n  //     }\n  //\n  //     axios.post('http://localhost:3001/api/category', {\n  //         title: title,\n  //     });\n  // };\n  //\n  // // our delete method that uses our backend api\n  // // to remove existing database information\n  // deleteFromDB = (idTodelete) => {\n  //     parseInt(idTodelete);\n  //     let objIdToDelete = null;\n  //     this.state.data.forEach((dat) => {\n  //         if (dat.id === +idTodelete) {\n  //             objIdToDelete = dat._id;\n  //         }\n  //     });\n  //\n  //     axios.delete('http://localhost:3001/api/deleteData', {\n  //         data: {\n  //             id: objIdToDelete,\n  //         },\n  //     });\n  // };\n  //\n  // // our update method that uses our backend api\n  // // to overwrite existing data base information\n  // updateDB = (idToUpdate, updateToApply) => {\n  //     let objIdToUpdate = null;\n  //     parseInt(idToUpdate);\n  //     this.state.data.forEach((dat) => {\n  //         if (dat.id === +idToUpdate) {\n  //             objIdToUpdate = dat._id;\n  //         }\n  //     });\n  //\n  //     axios.post('http://localhost:3001/api/updateData', {\n  //         id: objIdToUpdate,\n  //         update: { message: updateToApply },\n  //     });\n  // };\n  //\n  // // here is our UI\n  // // it is easy to understand their functions when you\n  // // see them render into our screen\n  render() {\n    // const { categories } = this.state\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/username\",\n      component: Profile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })))) // <section>\n    //     <BrowserRouter>\n    //         <div className={\"header\"}><Link to=\"/about\"><Header cart={this.state.cart}/></Link></div>\n    //         <div className={\"sidebar\"}><Sidebar categories={this.state.categories} setCurrentCategory={this.setCurrentCategory}/></div>\n    //         <div className={\"content\"}><ProductsList products={this.state.products} currentCategory={this.state.currentCategory}/></div>\n    //\n    //             <Route path=\"/about\" component={About} />\n    //     </BrowserRouter>\n    // </section>\n    ;\n  }\n\n} // function About() {\n//     return (\n//         <div>\n//             <h2>About</h2>\n//         </div>\n//     );\n// }\n\n\nexport default App;","map":{"version":3,"sources":["D:\\training\\react\\5\\serv_rout_db\\client\\src\\App.js"],"names":["React","Component","Home","BrowserRouter","Switch","Route","App","render","Profile"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C,C,CACA;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAM,EAAAA,MAAM,GAAG;AACL;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEL,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEA,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,WAAlB;AAA8B,MAAA,SAAS,EAAEM,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ,CADJ,CADJ,CAUQ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBR;AAqBH;;AA5FuB,C,CA+F5B;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeF,GAAf","sourcesContent":["import React, { Component } from 'react';\n// import axios from 'axios';\nimport './App.css';\nimport Home from \"./Component/Home\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n// import {routes} from \"./router\";\n\nclass App extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {\n    //         products: [],\n    //         categories: [],\n    //         currentCategory: \"Notebook\",\n    //         cart: [],\n    //         intervalIsSet: false\n    //     };\n    // }\n\n    // when component mounts, first thing it does is fetch all existing data in our db\n    // then we incorporate a polling logic so that we can easily see if our db has\n    // changed and implement those changes into our UI\n\n\n    // // our put method that uses our backend api\n    // // to create new query into our data base\n    // putDataToDB = (title) => {\n    //     let currentIds = this.state.data.map((data) => data.id);\n    //     let idToBeAdded = 0;\n    //     while (currentIds.includes(idToBeAdded)) {\n    //         ++idToBeAdded;\n    //     }\n    //\n    //     axios.post('http://localhost:3001/api/category', {\n    //         title: title,\n    //     });\n    // };\n    //\n    // // our delete method that uses our backend api\n    // // to remove existing database information\n    // deleteFromDB = (idTodelete) => {\n    //     parseInt(idTodelete);\n    //     let objIdToDelete = null;\n    //     this.state.data.forEach((dat) => {\n    //         if (dat.id === +idTodelete) {\n    //             objIdToDelete = dat._id;\n    //         }\n    //     });\n    //\n    //     axios.delete('http://localhost:3001/api/deleteData', {\n    //         data: {\n    //             id: objIdToDelete,\n    //         },\n    //     });\n    // };\n    //\n    // // our update method that uses our backend api\n    // // to overwrite existing data base information\n    // updateDB = (idToUpdate, updateToApply) => {\n    //     let objIdToUpdate = null;\n    //     parseInt(idToUpdate);\n    //     this.state.data.forEach((dat) => {\n    //         if (dat.id === +idToUpdate) {\n    //             objIdToUpdate = dat._id;\n    //         }\n    //     });\n    //\n    //     axios.post('http://localhost:3001/api/updateData', {\n    //         id: objIdToUpdate,\n    //         update: { message: updateToApply },\n    //     });\n    // };\n    //\n    // // here is our UI\n    // // it is easy to understand their functions when you\n    // // see them render into our screen\n    render() {\n        // const { categories } = this.state\n        return (\n            <div>\n                <BrowserRouter>\n                    <Switch>\n                        <Route exact path=\"/\" component={Home} />\n                        <Route exact path=\"/\" component={Home} />\n                        <Route exact path=\"/username\" component={Profile}/>\n                    </Switch>\n                </BrowserRouter>\n            </div>\n                // <section>\n                //     <BrowserRouter>\n                //         <div className={\"header\"}><Link to=\"/about\"><Header cart={this.state.cart}/></Link></div>\n                //         <div className={\"sidebar\"}><Sidebar categories={this.state.categories} setCurrentCategory={this.setCurrentCategory}/></div>\n                //         <div className={\"content\"}><ProductsList products={this.state.products} currentCategory={this.state.currentCategory}/></div>\n                //\n                //             <Route path=\"/about\" component={About} />\n                //     </BrowserRouter>\n                // </section>\n\n    );\n    }\n}\n\n// function About() {\n//     return (\n//         <div>\n//             <h2>About</h2>\n//         </div>\n//     );\n// }\n\nexport default App;"]},"metadata":{},"sourceType":"module"}